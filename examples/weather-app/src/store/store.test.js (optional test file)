// src/store/store.test.js

import { createStore } from 'redux';
import rootReducer from '../reducers';
import { fetchWeatherSuccess, fetchWeatherFailure } from '../reducers/weatherReducer';

describe('Redux store', () => {
    let store;
  
    beforeEach(() => {
        store = createStore(rootReducer);
    });

    it('should handle initial state', () => {
        const state = store.getState();
        expect(state.weather.weatherData).toBeNull();
        expect(state.weather.loading).toBeFalsy();
        expect(state.weather.error).toBeNull();
    });

    it('should handle FETCH_WEATHER_SUCCESS', () => {
        const data = { temp: 22, condition: 'Sunny' };
        store.dispatch(fetchWeatherSuccess(data));
        const state = store.getState();
        expect(state.weather.weatherData).toEqual(data);
        expect(state.weather.loading).toBeFalsy();
        expect(state.weather.error).toBeNull();
    });

    it('should handle FETCH_WEATHER_FAILURE', () => {
        const errorMessage = 'Failed to fetch';
        store.dispatch(fetchWeatherFailure(errorMessage));
        const state = store.getState();
        expect(state.weather.error).toEqual(errorMessage);
        expect(state.weather.loading).toBeFalsy();
    });
});